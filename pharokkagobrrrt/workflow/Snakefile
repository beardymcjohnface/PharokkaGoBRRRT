# from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider


configfile: os.path.join(workflow.basedir, '../', 'config', 'config.yaml')
# configfile: os.path.expanduser(config["args"]["credentials"])


# S3 = S3RemoteProvider(access_key_id=config["access_key_id"], secret_access_key=config["secret_access_key"])


include: os.path.join("rules", "preflight.smk")
include: os.path.join("rules", "megapharokka.smk")


# Mark target rules
target_rules = []
def targetRule(fn):
    assert fn.__name__.startswith('__')
    target_rules.append(fn.__name__[2:])
    return fn


localrules: all, print_targets, results_to_s3


@targetRule
rule all:
    input:
        targets


@targetRule
rule print_targets:
    run:
        print("\nTop level rules are: \n", file=sys.stderr)
        print("* " + "\n* ".join(target_rules) + "\n\n", file=sys.stderr)
